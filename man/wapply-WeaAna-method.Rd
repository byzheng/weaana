% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wapply.R
\docType{methods}
\name{wapply,WeaAna-method}
\alias{wapply,WeaAna-method}
\title{Statistics weather records by a certain period and function}
\usage{
\S4method{wapply}{WeaAna}(
  object,
  vars,
  period,
  FUN,
  ARGS = NULL,
  site.ARGS = NULL,
  res.name = "result",
  yrange = waGetPara("yrange"),
  as.data.frame = FALSE,
  extra = NULL
)
}
\arguments{
\item{object}{A WeaAna objects.}

\item{vars}{A variable vector to apply \code{FUN}.}

\item{period}{A period to apply FUN. It could be one of "year", "month", "week", "day", or 
any number of day.}

\item{FUN}{A function vector to be applied.}

\item{ARGS}{Optional arguments to \code{FUN}.}

\item{site.ARGS}{Arguments for each site}

\item{res.name}{A result name to store and return.}

\item{yrange}{Year range to statistics.}

\item{as.data.frame}{Logical, if TRUE, a data frame will be returned, but just a period supported.
if FALSE, a list will be returned.}

\item{extra}{A list or data.frame whose elements have the same length of sites}
}
\description{
\code{wapply} is a powerful and flexible function to statistics weather records. 
It could be used to calculate multiple variables with different functions 
and different parameters for all levels in a certain period.
}
\details{
\code{vars} could be a vector to list all variables which need to calculate. 
Available variables could be obtained through function \code{\link{getAvaiVars}}.

\code{period} could be one of "year", "month", "week", "day", or any number of day.
It will be complicated to the same length of \code{vars}.

\code{FUN} could be a vector. \code{FUN} will be replicated to the same length as \code{vars}.
Each \code{FUN} will be applied to each \code{vars} as the sequence of \code{vars}. 

Optional arguments \code{args} is a list which have the same length as \code{FUN}.
Each element of \code{args} is the optional arguments for each \code{FUN}. 
Each argument will be replicated to same length as level number which 
determines by period. Then, each level will be passed to different parameter.
}
\examples{
library(weaana)
data( "records" ) 
# calculate yearly mean temperature
wapply( records, vars = "avgt", period = "year", FUN = mean )
# yealy total rainfall
wapply( records, vars = "rain", period = "year", FUN = sum )
# yearly mean temperature
wapply( records, vars = "avgt", period = "year", FUN = mean )
# monthly mean temperature
wapply( records, vars = "avgt", period = "month", FUN = mean )
# 10 days mean temperature
wapply( records, vars = "avgt", period = 10, FUN = mean )
# yearly mean temperature, total raifall and mean radiation.
wapply( records, vars = c( "avgt", "rain", "radn" ), 
        period = "year", 
        FUN = c( mean, sum ), 
        res.name = c( "mean.avgt", "total.rain", "mean.radn" ) )
# calculate thermal time from last frost day to first heat day for year range 1960 to 2009
last.frost <- lastFrostDay( records, yrange = c( 1960, 2009 ) )
first.heat <- firstHeatDay( records, yrange = c( 1960, 2009 ) )
wapply( records, vars = "avgt", period = "year", FUN = function ( x, start, end, base = 0 )
{
            if ( is.na( start ) | is.na( end ) )
            {
                return( NA )
            } else
            {
                x <- x[ seq( start, end )]
                x <- x[ x > base ] - base
                return( sum( x, na.rm = TRUE ) )
            }
        }, ARGS = list( list( start = last.frost[,6], end = first.heat[,6] ) ), 
        res.name = "tt", yrange = c( 1960, 2009 ) )
}
